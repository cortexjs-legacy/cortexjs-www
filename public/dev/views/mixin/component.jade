mixin nav(user)
	.nav
		.bg
		.overlay
			.main-panel
				a.home(href="/")
				.search-box
					input(type="text" placeholder="moment...")
					i.icon-close.hide
			.util-panel
        a.github(href="https://github.com/cortexjs/cortex") Github Repo
				a.doc
				a.get-started(href="/get-started") GET STARTED
				if user
					a.user(href="/~#{user.name}")
						img.avatar(src="#{user.avatarMedium}")
				else	
					a.login(href="/login")
		ul.dropdown.hide
			li 
				a(href="/collections") COLLECTIONS
			
			li
				a(href="/~") TIMELINE
			if user
				li
					a(href="/~#{user.name}") MY BIO CARD
			li
				a(href="/logout") LOG OUT

mixin user(user,pkgs,showFollowBtn)
	section.user.card
		img.avatar(src="#{user.avatarLarge}")
		.username #{user.name}
		.info-area
			.item
				.content.followers #{user.followersCount||0}
				.title FOLLOWERS
			.item
				.content #{pkgs.length}
				.title PACKAGES
			.item
				.content.following #{user.followingCount||0}
				.title FOLLOWING
		if showFollowBtn
			a.btn-follow(href="javascript:;" data-user="#{user.name}" data-followed="#{user.isFollowed}")
				if user.isFollowed==0
					span FOLLOW
				else
					span UNFOLLOW
	

mixin user-info(user)
	section.user-info.card
		.head USER INFORMATION
		.body
			table
				if user.displayName
					tr
						td Full Name
						td #{user.displayName}
				else
					tr 
						td Name
						td #{user.name}
				tr
					td Email
					td
						a #{user.email}
				if user.github
					tr
						td Github
						td
							a(href="#{user.github}") #{user.github}
				if user.location
					tr
						td Location
						td #{user.location}

mixin package-info(pkg)
	a.package-info.card(href="/package/#{pkg.name}" target="_blank" data-name="#{pkg.name}")
		img.avatar(src="#{pkg.author.avatarMedium}")
		.content
			.top
				.package-name #{pkg.name}
				.version #{pkg.version}
			.bottom
				p.description #{pkg.description} 

mixin package-info-no-avatar(pkg)
	a.package-info.card(href="/package/#{pkg.name}" target="_blank" data-name="#{pkg.name}")
		.content
			.top
				.package-name #{pkg.name}
				.version #{pkg.version}
			.bottom
				p.description #{pkg.description} 

mixin package-stat(pkg)
	section.package-stat.card
		.top
			.aside
				a(href="/~#{pkg.author.name}" target="_blank")
					img.avatar(src="#{pkg.author.avatarMedium}")
			.txt
				.description #{pkg.description}
				.lastupdate Last updated by  
					a(href="/~#{pkg.author.name}" target="_blank") #{pkg.author.name}
					span  at #{moment(new Date(pkg.time.modified)).format('MM/DD YYYY')}
		.bottom
			a.item(href="#{pkg.homepage}" target="_blank")
				i(class="icon-home") 
				span Repo
			if pkg.bugs
				a.item(href="#{pkg.bugs.url}" target="_blank")
					i(class="icon-issue")
					span Issues

mixin maintainers(maintainers)
	section.maintainers.card
		.head MAINTAINERS
		.body
			each maintainer in maintainers
				a(href="/~#{maintainer.name}" target="_blank")
					img.avatar(src="#{maintainer.avatarMedium}")
				
mixin command(title,content)
	section.command.card
		.title #{title}
		.content 
			.txt #{content}

